import React, { useState } from 'react';
import { 
  Menu, Home, Brain, Cpu, Database, Shield, Infinity, 
  Network, Dna, Cloud, Lock, ChevronRight, Users, Globe,
  BarChart3, Terminal, Flask, Microscope
} from 'lucide-react';

const pageContent = {
  home: {
    title: "Welcome to Gödel Omniverse",
    subtitle: "Pioneering the Future of Human Evolution",
    sections: [
      {
        title: "Our Mission",
        content: "At Gödel Omniverse, we're pushing the boundaries of human potential through groundbreaking research in artificial intelligence, quantum computing, neurotechnology, and cybersecurity. Our ultimate goal is to achieve artificial general intelligence and develop mind uploading technology, paving the way for the next step in human evolution."
      },
      {
        title: "Latest Developments",
        items: [
          "Breakthrough in quantum neural networks",
          "Advanced brain-computer interface prototypes",
          "New cybersecurity paradigms for quantum systems",
          "Revolutionary AGI architecture research"
        ]
      }
    ]
  },
  ai: {
    title: "Artificial Intelligence & AGI",
    subtitle: "Building the Foundation for Artificial General Intelligence",
    sections: [
      {
        title: "Current Research",
        content: "Our AI division focuses on developing advanced neural architectures, consciousness modeling, and cognitive systems that mirror human intelligence. We're pioneering new approaches to machine learning that combine symbolic reasoning with deep learning."
      },
      {
        title: "Key Projects",
        items: [
          "Neural Architecture Search for AGI",
          "Consciousness Simulation Framework",
          "Quantum-Enhanced Machine Learning",
          "Ethical AI Development Protocols"
        ]
      },
      {
        title: "Technology Stack",
        items: [
          "Advanced Neural Networks",
          "Quantum Machine Learning",
          "Symbolic AI Systems",
          "Cognitive Architecture Design"
        ]
      }
    ]
  },
  quantum: {
    title: "Quantum Computing",
    subtitle: "Harnessing Quantum Mechanics for Revolutionary Computing",
    sections: [
      {
        title: "Research Focus",
        content: "Our quantum computing division develops next-generation quantum processors, algorithms, and applications. We're working on quantum-classical hybrid systems that can solve previously intractable problems in optimization, simulation, and artificial intelligence."
      },
      {
        title: "Active Projects",
        items: [
          "Quantum Error Correction",
          "Quantum Neural Networks",
          "Quantum Cryptography",
          "Quantum Algorithm Development"
        ]
      }
    ]
  },
  neurotech: {
    title: "Neurotechnology",
    subtitle: "Bridging Mind and Machine",
    sections: [
      {
        title: "Core Research",
        content: "Our neurotechnology team works on advanced brain-computer interfaces, neural mapping, and consciousness transfer technologies. We're developing revolutionary methods for understanding and interfacing with human consciousness."
      },
      {
        title: "Key Initiatives",
        items: [
          "High-Resolution Brain Mapping",
          "Neural Interface Development",
          "Consciousness Transfer Protocols",
          "Brain State Analysis Systems"
        ]
      }
    ]
  },
  security: {
    title: "Cybersecurity",
    subtitle: "Protecting the Future of Technology",
    sections: [
      {
        title: "Security Framework",
        content: "Our cybersecurity division develops quantum-resistant encryption, neural network security, and advanced threat detection systems. We're creating the security infrastructure needed for the next generation of technology."
      },
      {
        title: "Current Projects",
        items: [
          "Post-Quantum Cryptography",
          "Neural Network Security",
          "Quantum Key Distribution",
          "Advanced Threat Detection"
        ]
      }
    ]
  }
};

const TechCard = ({ title, icon: Icon, description, stats }) => (
  <div className="bg-gray-800 rounded-lg p-6 hover:bg-gray-700 transition-all">
    <div className="flex items-center gap-3 mb-4">
      <Icon className="w-8 h-8 text-blue-400" />
      <h3 className="text-xl font-bold text-white">{title}</h3>
    </div>
    <p className="text-gray-300 mb-4">{description}</p>
    {stats && (
      <div className="grid grid-cols-2 gap-4">
        {stats.map((stat, index) => (
          <div key={index} className="text-center">
            <div className="text-2xl font-bold text-blue-400">{stat.value}</div>
            <div className="text-sm text-gray-400">{stat.label}</div>
          </div>
        ))}
      </div>
    )}
  </div>
);

const ProjectTimeline = ({ projects }) => (
  <div className="space-y-4">
    {projects.map((project, index) => (
      <div key={index} className="flex items-start gap-4">
        <div className="w-2 h-2 mt-2 rounded-full bg-blue-400" />
        <div>
          <h4 className="text-lg font-semibold text-white">{project.title}</h4>
          <p className="text-gray-300">{project.description}</p>
        </div>
      </div>
    ))}
  </div>
);

const ResearchMetrics = ({ metrics }) => (
  <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
    {metrics.map((metric, index) => (
      <div key={index} className="bg-gray-800 p-6 rounded-lg text-center">
        <div className="text-3xl font-bold text-blue-400 mb-2">{metric.value}</div>
        <div className="text-gray-300">{metric.label}</div>
      </div>
    ))}
  </div>
);

const Website = () => {
  const [activePage, setActivePage] = useState('home');
  const [showMobileMenu, setShowMobileMenu] = useState(false);

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-900 to-gray-800">
      {/* Header & Navigation */}
      <header className="bg-gray-900 border-b border-gray-700">
        <div className="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex items-center justify-between h-20">
            {/* Logo & Company Name */}
            <div className="flex items-center gap-4">
              <img
                src="/api/placeholder/48/48"
                alt="Gödel Omniverse"
                className="h-12 w-12"
              />
              <span className="text-2xl font-bold text-white">Gödel Omniverse</span>
            </div>

            {/* Desktop Navigation */}
            <nav className="hidden md:flex items-center gap-6">
              {Object.entries(pageContent).map(([key, page]) => (
                <button
                  key={key}
                  onClick={() => setActivePage(key)}
                  className={`
                    px-4 py-2 rounded-md text-sm font-medium transition-colors
                    ${activePage === key 
                      ? 'bg-blue-600 text-white' 
                      : 'text-gray-300 hover:bg-gray-700'}
                  `}
                >
                  {page.title}
                </button>
              ))}
            </nav>

            {/* Mobile Menu Button */}
            <button 
              className="md:hidden p-2"
              onClick={() => setShowMobileMenu(!showMobileMenu)}
            >
              <Menu className="h-6 w-6 text-white" />
            </button>
          </div>
        </div>
      </header>

      {/* Mobile Navigation */}
      {showMobileMenu && (
        <div className="md:hidden bg-gray-800 p-4">
          <nav className="flex flex-col gap-2">
            {Object.entries(pageContent).map(([key, page]) => (
              <button
                key={key}
                onClick={() => {
                  setActivePage(key);
                  setShowMobileMenu(false);
                }}
                className={`
                  px-4 py-2 rounded-md text-sm font-medium text-left
                  ${activePage === key 
                    ? 'bg-blue-600 text-white' 
                    : 'text-gray-300 hover:bg-gray-700'}
                `}
              >
                {page.title}
              </button>
            ))}
          </nav>
        </div>
      )}

      {/* Main Content */}
      <main className="max-w-7xl mx-auto py-12 px-4 sm:px-6 lg:px-8">
        <div className="mb-12">
          <h1 className="text-4xl font-bold text-white mb-4">
            {pageContent[activePage].title}
          </h1>
          <p className="text-xl text-gray-300">
            {pageContent[activePage].subtitle}
          </p>
        </div>

        {/* Page Content */}
        <div className="space-y-12">
          {pageContent[activePage].sections.map((section, index) => (
            <section key={index} className="bg-gray-800 rounded-lg p-8">
              <h2 className="text-2xl font-bold text-white mb-6">
                {section.title}
              </h2>
              
              {section.content && (
                <p className="text-gray-300 mb-6">{section.content}</p>
              )}
              
              {section.items && (
                <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                  {section.items.map((item, i) => (
                    <div 
                      key={i}
                      className="flex items-center gap-3 bg-gray-700 p-4 rounded-lg"
                    >
                      <ChevronRight className="w-5 h-5 text-blue-400" />
                      <span className="text-gray-200">{item}</span>
                    </div>
                  ))}
                </div>
              )}
            </section>
          ))}

          {/* Research Metrics */}
          <ResearchMetrics
            metrics={[
              { value: "50+", label: "Research Projects" },
              { value: "200+", label: "Team Members" },
              { value: "15", label: "Global Partners" }
            ]}
          />

          {/* Technology Cards */}
          <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
            <TechCard
              title="Quantum Systems"
              icon={Cpu}
              description="Next-generation quantum computing architectures"
              stats={[
                { value: "100+", label: "Qubits" },
                { value: "99.9%", label: "Fidelity" }
              ]}
            />
            <TechCard
              title="Neural Interfaces"
              icon={Brain}
              description="Advanced brain-computer interface technology"
              stats={[
                { value: "1M+", label: "Neurons" },
                { value: "<1ms", label: "Latency" }
              ]}
            />
            <TechCard
              title="AI Systems"
              icon={Network}
              description="Cutting-edge artificial intelligence platforms"
              stats={[
                { value: "10B+", label: "Parameters" },
                { value: "99%", label: "Accuracy" }
              ]}
            />
          </div>
        </div>
      </main>

      {/* Footer */}
      <footer className="bg-gray-900 mt-12 py-12 px-4">
        <div className="max-w-7xl mx-auto grid grid-cols-1 md:grid-cols-4 gap-8">
          <div>
            <h3 className="text-white font-bold mb-4">About Us</h3>
            <p className="text-gray-400">
              Pioneering the future of human consciousness and technological evolution.
            </p>
          </div>
          <div>
            <h3 className="text-white font-bold mb-4">Contact</h3>
            <p className="text-gray-400">info@godelomniverse.com</p>
          </div>
          <div>
            <h3 className="text-white font-bold mb-4">Follow Us</h3>
            <div className="flex gap-4">
              <Globe className="w-6 h-6 text-gray-400" />
              <Users className="w-6 h-6 text-gray-400" />
            </div>
          </div>
          <div>
            <h3 className="text-white font-bold mb-4">Legal</h3>
            <ul className="text-gray-400 space-y-2">
              <li>Privacy Policy</li>
              <li>Terms of Service</li>
            </ul>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Website;
